datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL_ONLINE")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id           String     @id @default(cuid()) @map("_id")
  name         String   
  slug         String
  shortDescription  String?
  longDescription String?
  keywords      String[]
  parentId     String?
  parent       Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subcategories Category[] @relation("CategoryHierarchy")
  accounts     CategoryMapping[]
  popular     Boolean    @default(false)
  depth        Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?

  @@unique([slug])
  @@index([name])
  @@index([parentId])
  @@index([shortDescription])
  @@index([longDescription])
  @@index([keywords])
  @@index([popular])
}


model Account {
  id              String     @id @default(cuid()) @map("_id")
  platform        Platform
  accountId       String
  handle          String?
  name            String?
  name_en         String?
  followerCount   Int?
  imageUrl        String?
  country         String?   
  description     String?
  description_en  String?
  keywords        String?
  keywords_en     String?
  categories      CategoryMapping[]
  ytData          Json?
  isSeeded        Boolean    @default(false)
  isSuspended     Boolean    @default(false)
  ranking         Json?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  language_code   String?
  lang_confidence_score Float?
  

  @@unique([platform, accountId])
  @@index([platform])
  @@index([accountId])
  @@index([handle])
  @@index([name])
  @@index([name_en])
  @@index([country])
  @@index([followerCount])
  @@index([description])
  @@index([keywords])
  @@index([description_en])
  @@index([keywords_en])
  @@index([isSuspended])
  @@index([language_code])
}

model CategoryMapping {
  id         String   @id @default(cuid()) @map("_id")
  accountId  String
  categoryId String
  account    Account  @relation(fields: [accountId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([accountId, categoryId])
  @@index([accountId])
  @@index([categoryId])
}

enum Platform {
  YOUTUBE
  TWITTER
  INSTAGRAM
  REDDIT
  TIKTOK
  TWITCH
}

