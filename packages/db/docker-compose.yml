version: "3.8"

services:
  mongo1:
    image: mongo:6
    container_name: mongo1
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    ports:
      - 27017:27017
    volumes:
      - mongo1_data:/data/db
    networks:
      - mongo_network
    restart: always

  mongo2:
    image: mongo:6
    container_name: mongo2
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    ports:
      - 27018:27017
    volumes:
      - mongo2_data:/data/db
    networks:
      - mongo_network
    restart: always

  mongo3:
    image: mongo:6
    container_name: mongo3
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    ports:
      - 27019:27017
    volumes:
      - mongo3_data:/data/db
    networks:
      - mongo_network
    restart: always

  mongo_setup:
    image: mongo:6
    container_name: mongo_setup
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: >
      bash -c " sleep 10; mongo --host mongo1:27017 -u root -p examplepassword
      --authenticationDatabase admin <<EOF
        rs.initiate({
          _id: 'rs0',
          members: [
            { _id: 0, host: 'mongo1:27017' },
            { _id: 1, host: 'mongo2:27017' },
            { _id: 2, host: 'mongo3:27017' }
          ]
        });
        sleep(10);
        use admin;
        db.createUser({
          user: 'admin',
          pwd: 'secret',
          roles: [ { role: 'root', db: 'admin' } ]
        });
        rs.status();
        exit;
      EOF"
    networks:
      - mongo_network

networks:
  mongo_network:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
