---
apiVersion: v1
kind: Namespace
metadata:
  name: ratecreator
  labels:
    name: ratecreator
    environment: production
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-clerk-sync-service
  namespace: ratecreator
  annotations:
    # HTTP Configuration
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3010
      protocol: TCP
      name: http
  selector:
    app: webhook-clerk-sync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-clerk-sync-deployment
  namespace: ratecreator
  labels:
    app: webhook-clerk-sync
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webhook-clerk-sync
  template:
    metadata:
      labels:
        app: webhook-clerk-sync
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: webhook-clerk-sync
          image: registry.digitalocean.com/orbizza/clerk-sync:latest
          ports:
            - containerPort: 3010
          env:
            - name: NODE_ENV
              value: "production"
            - name: CLERK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: clerk-sync-secrets
                  key: CLERK_SECRET_KEY
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: clerk-sync-secrets
                  key: DATABASE_URL
            - name: KAFKA_BROKERS
              valueFrom:
                secretKeyRef:
                  name: clerk-sync-secrets
                  key: KAFKA_BROKERS
            - name: KAFKA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: clerk-sync-secrets
                  key: KAFKA_USERNAME
            - name: KAFKA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: clerk-sync-secrets
                  key: KAFKA_PASSWORD
            - name: KAFKA_SSL_CA_LOCATION
              value: "/etc/kafka/certs/ca.crt"
          volumeMounts:
            - name: kafka-cert
              mountPath: "/etc/kafka/certs"
              readOnly: true
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: kafka-cert
          secret:
            secretName: kafka-cert
        - name: tmp
          emptyDir: {}
      imagePullSecrets:
        - name: registry-secret
